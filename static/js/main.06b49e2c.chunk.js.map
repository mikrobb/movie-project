{"version":3,"sources":["actions.js","commponents/Cards/MovieCard.js","commponents/Cards/HeaderCard.js","commponents/HomePage.js","commponents/Cards/FavFilmCard.js","commponents/FavoriteFilms.js","commponents/MovieShow.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["ALLMOVIES","FINDGENRES","SEARCHFILM","SHOWFILM","FAVORITEFILMS","MovieCard","setToLocalStorage","info","idGenre","favoriteMoiveArr","dispatch","useDispatch","className","src","poster_path","alt","to","id","title","filter","genre","genre_ids","includes","map","name","onClick","newArray","item","type","payload","push","togle","Header","style","fontSize","onChange","event","target","value","placeholder","HomePage","movie","useSelector","state","search","useEffect","fetch","then","data","json","results","genres","film","toLowerCase","FavFilmCard","index","deleteFavMovie","FavoriteFilms","console","log","textAlign","MovieShow","useParams","findFilm","status","release_date","overview","key","localStorage","setItem","JSON","stringify","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","parse","getItem","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06b49e2c.chunk.js","sourcesContent":["export const ALLMOVIES = \"AllMovies\";\r\nexport const FINDGENRES = \"FindGenre\";\r\nexport const SEARCHFILM = \"SearchFilm\";\r\nexport const SHOWFILM = \"FindFilm\";\r\nexport const FAVORITEFILMS = \"FavFilms\";\r\n\r\n// export function getFilm() {\r\n//   return function (dispatch) {\r\n//     fetch(url)\r\n//       .then((data) => data.json())\r\n//       .then((json) => dispatch({ type: ALLMOVIES, payload: json.results }));\r\n//   };\r\n// }\r\n","import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FAVORITEFILMS } from \"../../actions\";\r\n\r\nexport default function MovieCard({\r\n  setToLocalStorage,\r\n  info,\r\n  idGenre,\r\n  favoriteMoiveArr,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  function togle(info) {\r\n    if (favoriteMoiveArr.includes(info.title)) {\r\n      const newArray = favoriteMoiveArr.filter((item) => {\r\n        return item !== info.title;\r\n      });\r\n      dispatch({ type: FAVORITEFILMS, payload: newArray });\r\n      setToLocalStorage(\"favMovies\", newArray);\r\n    } else {\r\n      const newArray = [...favoriteMoiveArr];\r\n      newArray.push(info.title);\r\n      dispatch({ type: FAVORITEFILMS, payload: newArray });\r\n      setToLocalStorage(\"favMovies\", newArray);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Fragment key={info.id}>\r\n        <div className=\"movieBlock\">\r\n          <div className=\"imgBlock\">\r\n            <img\r\n              className=\"poster\"\r\n              src={`https://image.tmdb.org/t/p/w500${info.poster_path}`}\r\n              alt=\"Poster\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Link className=\"movieTitle\" to={`film/${info.id}`}>\r\n              {info.title}{\" \"}\r\n            </Link>\r\n            <p>\r\n              Genre:{\" \"}\r\n              {idGenre\r\n                .filter((genre) => info.genre_ids.includes(genre.id))\r\n                .map((genre) => genre.name)}{\" \"}\r\n            </p>\r\n            <button className=\"btnAdd\" onClick={() => togle(info)}>\r\n              {favoriteMoiveArr.includes(info.title)\r\n                ? \"Delete from Watch List\"\r\n                : \"Add To Watch List\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SEARCHFILM } from \"../../actions\";\r\n\r\nexport default function Header({ dispatch }) {\r\n  return (\r\n    <div className=\"headerBlock\">\r\n      <div>\r\n        <Link className=\"favLink\" to=\"favoriteFilms\">\r\n          Whatch List\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <h1 style={{ fontSize: \"50px\" }}>Popular Movies</h1>\r\n      </div>\r\n      <div>\r\n        <span>Search:</span>\r\n        <input\r\n          onChange={(event) =>\r\n            dispatch({ type: SEARCHFILM, payload: event.target.value })\r\n          }\r\n          className=\"searchMovie\"\r\n          type=\"text\"\r\n          placeholder=\"Search the movie\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MovieCard from \"./Cards/MovieCard\";\r\nimport Header from \"./Cards/HeaderCard\";\r\nimport { ALLMOVIES, FINDGENRES, getFilm } from \"../actions\";\r\n\r\nconst url =\r\n  \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=b54d85cb2be9820579d44930b497a17a\";\r\n\r\nexport default function HomePage({ setToLocalStorage }) {\r\n  const movie = useSelector((state) => state.movie);\r\n  const idGenre = useSelector((state) => state.idGenre);\r\n  const search = useSelector((state) => state.search);\r\n  const favoriteMoiveArr = useSelector((state) => state.favoriteMoiveArr);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((data) => data.json())\r\n      .then((json) => dispatch({ type: ALLMOVIES, payload: json.results }));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=b54d85cb2be9820579d44930b497a17a&language=en-US\"\r\n    )\r\n      .then((data) => data.json())\r\n      .then((json) => dispatch({ type: FINDGENRES, payload: json.genres }));\r\n  }, [dispatch]);\r\n\r\n  if (!movie) return <div>Loading...</div>;\r\n  return (\r\n    <>\r\n      <Header dispatch={dispatch} />\r\n      <div className=\"movieMain\">\r\n        {movie\r\n          .filter((film) =>\r\n            film.title.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((info) => (\r\n            <MovieCard\r\n              setToLocalStorage={setToLocalStorage}\r\n              favoriteMoiveArr={favoriteMoiveArr}\r\n              info={info}\r\n              idGenre={idGenre}\r\n              favoriteMoiveArr={favoriteMoiveArr}\r\n            />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Fragment } from \"react\";\r\n\r\nexport default function FavFilmCard({index, movie, deleteFavMovie}) {\r\n    return (\r\n        <Fragment key={index}>\r\n            <div className=\"favBlock\">\r\n              <i className=\"fa fa-bookmark\" aria-hidden=\"true\">\r\n                <span className=\"titleFav\">{movie}</span>\r\n              </i>\r\n              <button onClick={() => deleteFavMovie(movie)}>\r\n                Delete Movie\r\n              </button>\r\n            </div>\r\n          </Fragment>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FavFilmCard from \"./Cards/FavFilmCard\";\r\nimport { FAVORITEFILMS } from \"../actions\";\r\n\r\nexport default function FavoriteFilms({ setToLocalStorage }) {\r\n  const favoriteMoiveArr = useSelector((state) => state.favoriteMoiveArr);\r\n  const dispatch = useDispatch();\r\n\r\n  function deleteFavMovie(movie) {\r\n    const newArray = favoriteMoiveArr.filter((item) => {\r\n      console.log(item, movie);\r\n      return item !== movie;\r\n    });\r\n    dispatch({ type: FAVORITEFILMS, payload: newArray });\r\n    setToLocalStorage(\"favMovies\", newArray);\r\n  }\r\n\r\n  return (\r\n    <div className=\"favMovieMain\">\r\n      <div className=\"titleBlock\" style={{ textAlign: \"center\" }}>\r\n        <span>Whatch List:</span>\r\n      </div>\r\n      <div>\r\n        {favoriteMoiveArr.map((movie, index) => (\r\n          <FavFilmCard index={index} movie={movie} deleteFavMovie={deleteFavMovie}/>\r\n        ))}\r\n      </div>\r\n      <div className=\"linkToHome\" style={{ textAlign: \"center\" }}>\r\n        <Link to=\"/\">Go to HomePage</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { SHOWFILM, FAVORITEFILMS } from \"../actions\";\r\n\r\nexport default function MovieShow({ setToLocalStorage }) {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const findFilm = useSelector((state) => state.findFilm);\r\n  const favoriteMoiveArr = useSelector((state) => state.favoriteMoiveArr);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=b54d85cb2be9820579d44930b497a17a`\r\n    )\r\n      .then((data) => data.json())\r\n      .then((json) => dispatch({ type: SHOWFILM, payload: json }));\r\n  }, [dispatch]);\r\n\r\n  function togle(info) {\r\n    if (favoriteMoiveArr.includes(info.title)) {\r\n      const newArray = favoriteMoiveArr.filter((item) => {\r\n        return item !== info.title;\r\n      });\r\n      dispatch({ type: FAVORITEFILMS, payload: newArray });\r\n      setToLocalStorage(\"favMovies\", newArray);\r\n    } else {\r\n      const newArray = [...favoriteMoiveArr];\r\n      newArray.push(info.title);\r\n      dispatch({ type:FAVORITEFILMS, payload: newArray });\r\n      setToLocalStorage(\"favMovies\", newArray);\r\n    }\r\n  }\r\n\r\n  if (!findFilm) return <div>Loading...</div>;\r\n  return (\r\n    <>\r\n      <div className=\"findFilmMain\">\r\n        <div className=\"findFimlTitleBlock\">\r\n          {findFilm.title}\r\n          <span className=\"linkToHomePage\">\r\n            <Link to=\"/\">(go to home page...)</Link>\r\n          </span>\r\n        </div>\r\n        <hr />\r\n        <div className=\"findFimlInfoMain\">\r\n          <div className=\"findFilmPosterImg\">\r\n            {\" \"}\r\n            <img\r\n              className=\"findFilmPoster\"\r\n              src={`https://image.tmdb.org/t/p/w500${findFilm.poster_path}`}\r\n              alt=\"Poster\"\r\n            />\r\n          </div>\r\n          <div className=\"findFilmInfoBlock\">\r\n            <div className=\"findFilmInfoAboutFilm\">\r\n              <p className=\"findFilmInfoAboutFilm_Title\">Status:</p>\r\n              <p className=\"findFilmInfoAboutFilm_Text\">{findFilm.status}</p>\r\n              <hr />\r\n            </div>\r\n            <div className=\"findFilmInfoAboutFilm\">\r\n              <p className=\"findFilmInfoAboutFilm_Title\">Release date:</p>\r\n              <p className=\"findFilmInfoAboutFilm_Text\">\r\n                {findFilm.release_date}\r\n              </p>\r\n              <hr />\r\n            </div>\r\n            <div className=\"findFilmInfoAboutFilm\">\r\n              <p className=\"findFilmInfoAboutFilm_Title\">Overview:</p>\r\n              <p className=\"findFilmInfoAboutFilm_Text\">{findFilm.overview}</p>\r\n              <hr />\r\n            </div>\r\n            <div className=\"findFilmInfoAboutFilm\">\r\n              <p className=\"findFilmInfoAboutFilm_Title\">Genres:</p>\r\n              <p className=\"findFilmInfoAboutFilm_Text\">\r\n                {findFilm.genres.map((genres) => genres.name)}\r\n              </p>\r\n              <hr />\r\n            </div>\r\n            <div className=\"findFilmInfoAboutFilm\">\r\n              <button className=\"btnAdd\" onClick={() => togle(findFilm)}>\r\n                {favoriteMoiveArr.includes(findFilm.title)\r\n                  ? \"Delete from Watch List\"\r\n                  : \"Add To Watch List\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import HomePage from \"./commponents/HomePage\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport FavoriteFilms from \"./commponents/FavoriteFilms\";\r\nimport MovieShow from \"./commponents/MovieShow\";\r\n\r\nfunction setToLocalStorage(key, value) {\r\n  return localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nfunction getFromLocalStorage(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Route exact path=\"/\">\r\n          <HomePage setToLocalStorage={setToLocalStorage} />\r\n        </Route>\r\n        <Route path=\"/favoriteFilms\">\r\n          <FavoriteFilms setToLocalStorage={setToLocalStorage} />\r\n        </Route>\r\n        <Route path=\"/film/:id\">\r\n          <MovieShow setToLocalStorage={setToLocalStorage} />\r\n        </Route>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\r\nimport {\r\n  ALLMOVIES,\r\n  FINDGENRES,\r\n  SEARCHFILM,\r\n  SHOWFILM,\r\n  FAVORITEFILMS,\r\n} from \"./actions\";\r\n\r\nfunction getFromLocalStorage(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nconst initialState = {\r\n  favoriteMoiveArr: getFromLocalStorage(\"favMovies\") || [],\r\n  movie: null,\r\n  idGenre: [],\r\n  search: \"\",\r\n  findFilm: \"\",\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ALLMOVIES: {\r\n      return { ...state, movie: action.payload };\r\n    }\r\n    case FINDGENRES: {\r\n      return { ...state, idGenre: action.payload };\r\n    }\r\n    case SEARCHFILM: {\r\n      return { ...state, search: action.payload };\r\n    }\r\n    case SHOWFILM: {\r\n      return { ...state, findFilm: action.payload };\r\n    }\r\n    case FAVORITEFILMS: {\r\n      return { ...state, favoriteMoiveArr: action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./style.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}